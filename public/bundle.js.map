{"version":3,"sources":["bundle.js","app.js","component/mainApp.js","component/navbar.js","component/quotes.js","services/mainService.js","controllers/mainCtrl.js"],"names":["angular","module","config","component","controller","templateUrl","bindings","quote","service","$http","$log","randomQuote","baseUrl","method","url","then","response","console","log","saveQuote","data","randomBible","$scope","mainService","quotes","getQuote","tempQuote","tempData","quoteText","author","quoteAuthor","push","closure","num","timeOutCounter","i","setTimeout"],"mappings":"AAAA;;ACAAA,QAAQC,OAAO,aAAa,IAC3BC,OAAO,YAAW;ADEnB;;AEHAF,QAAQC,OAAO,aAAaE,UAAU,WAAW;EAC/CC,YAAY;EACZC,aAAa;;;AFQf;;AGVAL,QAAQC,OAAO,aAAaE,UAAU,UAAU;EAC9CC,YAAY;EACZC,aAAa;;;AHef;;AIjBAL,QAAQC,OAAO,aAAaE,UAAU,UAAU;EAC9CC,YAAY;EACZE,UAAU;IACRC,OAAO;;EAETF,aAAa;;AJqBf;;AK1BAL,QAAQC,OAAO,aAAaO,QAAQ,iCAAe,UAAUC,OAAOC,MAAM;;EAExE,KAAKC,cAAc,YAAY;IAC7B,IAAMC,UAAU;IAChB,OAAOH,MAAM;MACXI,QAAQ;MACRC,KAAKF;OACJG,KAAK,UAAUC,UAAU;MAC1BC,QAAQC,IAAI,kBAAkBF;MAC9B,OAAQA;;;;EAIZ,KAAKG,YAAY,UAAUC,MAAM;IAC/B,IAAMR,UAAU;IAChB,OAAOH,MAAM;MACXI,QAAQ;MACRC,KAAKF;MACLQ,MAAMA;OACLL,KAAK,UAAUC,UAAU;MAC1B,OAAQA;;;;EAIZ,KAAKK,cAAc,YAAY;IAC7B,IAAMT,UAAU;IAChB,OAAOH,MAAM;MACXI,QAAQ;MACRC,KAAKF;OACJG,KAAK,UAAUC,UAAU;MAC1BC,QAAQC,IAAI,kBAAkBF;MAC9B,OAAQA;;;;ALgCd;;AM/DAhB,QAAQC,OAAO,aAAaG,WAAW,sCAAY,UAAUkB,QAAQC,aAAa;EAChFD,OAAOE,SAAS;;;;;EAKhBF,OAAOH,YAAY,UAACC,MAAS;IAC3BH,QAAQC,IAAI;IACZK,YAAYJ,UAAUC,MAAML,KAAK,UAAUC,UAAU;;;EAIvD,IAAIS,WAAW,SAAXA,WAAiB;IACnBF,YAAYZ,cAAcI,KAAK,UAAUC,UAAU;MACjD,IAAIU,YAAYV,SAASI;MACzBH,QAAQC,IAAI,wBAAwBQ;;MAEpC,IAAIC,WAAW;QACbpB,OAAOmB,UAAUE;QACjBC,QAAQH,UAAUI;;;;MAIpBR,OAAOE,OAAOO,KAAKJ;;MAEnBV,QAAQC,IAAI,mBAAmBI,OAAOE;;;;EAM1C,IAAIQ,UAAU,SAAVA,QAAoBC,KAAK;IAC3B,OAAO,YAAY;MACjBR;;;;EAIJ,IAAIS,iBAAiB,SAAjBA,iBAA6B;IAC/B,KAAK,IAAIC,IAAI,GAAGA,KAAK,GAAGA,KAAK;MAC3BC,WAAWJ,QAAQG,IAAIA,IAAI;;;;EAI/BD;IA3CF","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('quotagram', []).config(function () {});\n'use strict';\n\nangular.module('quotagram').component('mainApp', {\n  controller: 'mainCtrl',\n  templateUrl: 'views/mainview.html'\n\n});\n'use strict';\n\nangular.module('quotagram').component('navbar', {\n  controller: 'mainCtrl',\n  templateUrl: 'views/navbar.html'\n\n});\n'use strict';\n\nangular.module('quotagram').component('quotes', {\n  controller: 'mainCtrl',\n  bindings: {\n    quote: '<'\n  },\n  templateUrl: 'views/quotes.html'\n});\n'use strict';\n\nangular.module('quotagram').service('mainService', function ($http, $log) {\n\n  this.randomQuote = function () {\n    var baseUrl = \"/api/quotes\";\n    return $http({\n      method: 'GET',\n      url: baseUrl\n    }).then(function (response) {\n      console.log('Quote is back!', response);\n      return response;\n    });\n  };\n\n  this.saveQuote = function (data) {\n    var baseUrl = \"/api/quotes/save\";\n    return $http({\n      method: 'POST',\n      url: baseUrl,\n      data: data\n    }).then(function (response) {\n      return response;\n    });\n  };\n\n  this.randomBible = function () {\n    var baseUrl = \"/api/bibleQuotes\";\n    return $http({\n      method: 'GET',\n      url: baseUrl\n    }).then(function (response) {\n      console.log('Quote is back!', response);\n      return response;\n    });\n  };\n});\n'use strict';\n\nangular.module('quotagram').controller('mainCtrl', function ($scope, mainService) {\n  $scope.quotes = [];\n\n  // test\n  //debugger;\n\n  $scope.saveQuote = function (data) {\n    console.log('Save quote from controller! working');\n    mainService.saveQuote(data).then(function (response) {});\n  };\n\n  var getQuote = function getQuote() {\n    mainService.randomQuote().then(function (response) {\n      var tempQuote = response.data;\n      console.log('Showing the quotes: ', tempQuote);\n      //debugger;\n      var tempData = {\n        quote: tempQuote.quoteText,\n        author: tempQuote.quoteAuthor\n      };\n\n      //saveQuote(tempData);\n      $scope.quotes.push(tempData);\n\n      console.log('Showing array: ', $scope.quotes);\n    });\n  };\n\n  var closure = function closure(num) {\n    return function () {\n      getQuote();\n    };\n  };\n\n  var timeOutCounter = function timeOutCounter() {\n    for (var i = 0; i <= 5; i++) {\n      setTimeout(closure(i), i * 2000);\n    }\n  };\n\n  timeOutCounter();\n});","angular.module('quotagram', [])\r\n.config(function() {\r\n\r\n});\r\n\r\n","angular.module('quotagram').component('mainApp', {\r\n  controller: 'mainCtrl',\r\n  templateUrl: 'views/mainview.html'\r\n  \r\n});","angular.module('quotagram').component('navbar', {\r\n  controller: 'mainCtrl',\r\n  templateUrl: 'views/navbar.html'\r\n  \r\n});","angular.module('quotagram').component('quotes', {\r\n  controller: 'mainCtrl',\r\n  bindings: {\r\n    quote: '<'\r\n  },\r\n  templateUrl: 'views/quotes.html'\r\n  });\r\n","angular.module('quotagram').service('mainService', function ($http, $log) {\r\n\r\n  this.randomQuote = function () {\r\n    const baseUrl = \"/api/quotes\";\r\n    return $http({\r\n      method: 'GET',\r\n      url: baseUrl,\r\n    }).then(function (response) {\r\n      console.log('Quote is back!', response);\r\n      return (response);\r\n    });\r\n  };\r\n\r\n  this.saveQuote = function (data) {\r\n    const baseUrl = \"/api/quotes/save\";\r\n    return $http({\r\n      method: 'POST',\r\n      url: baseUrl,\r\n      data: data\r\n    }).then(function (response) {\r\n      return (response);\r\n    });\r\n  };\r\n\r\n  this.randomBible = function () {\r\n    const baseUrl = \"/api/bibleQuotes\";\r\n    return $http({\r\n      method: 'GET',\r\n      url: baseUrl,\r\n    }).then(function (response) {\r\n      console.log('Quote is back!', response);\r\n      return (response);\r\n    });\r\n  };\r\n\r\n});","angular.module('quotagram').controller('mainCtrl', function ($scope, mainService) {\r\n  $scope.quotes = [];\r\n\r\n  // test\r\n  //debugger;\r\n\r\n  $scope.saveQuote = (data) => {\r\n    console.log('Save quote from controller! working')\r\n    mainService.saveQuote(data).then(function (response) {\r\n    });\r\n  };\r\n\r\n  var getQuote = () => {\r\n    mainService.randomQuote().then(function (response) {\r\n      let tempQuote = response.data;\r\n      console.log('Showing the quotes: ', tempQuote);\r\n      //debugger;\r\n      let tempData = {\r\n        quote: tempQuote.quoteText,\r\n        author: tempQuote.quoteAuthor\r\n      };\r\n\r\n      //saveQuote(tempData);\r\n      $scope.quotes.push(tempData);\r\n\r\n      console.log('Showing array: ', $scope.quotes);\r\n    });\r\n  };\r\n\r\n\r\n\r\n  var closure = function (num) {\r\n    return function () {\r\n      getQuote();\r\n    };\r\n  };\r\n\r\n  var timeOutCounter = function () {\r\n    for (var i = 0; i <= 5; i++) {\r\n      setTimeout(closure(i), i * 2000);\r\n    }\r\n  };\r\n\r\n  timeOutCounter();\r\n});"]}